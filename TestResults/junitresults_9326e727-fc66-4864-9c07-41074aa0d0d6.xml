<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="7" time="1.348" timestamp="2025-08-29T19:34:58.606488+10:00" hostname="Dans_Laptop_01"><testcase classname="tests.test_main" name="test_get_chord_notes_for_editor" file="tests\test_main.py" line="102" time="0.114"><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_get_chords_in_scale" file="tests\test_main.py" line="94" time="0.141"><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_get_notes_from_intervals_chord" file="tests\test_main.py" line="204" time="0.131"><failure message="AssertionError: assert ['A', 'B', 'C#'] == ['A', 'C', 'E']&#10;  &#10;  At index 1 diff: 'B' != 'C'&#10;  Use -v to get more diff">def test_get_notes_from_intervals_chord():
        """Unit test for get_notes_from_intervals with an A Minor chord."""
        intervals = [1, 3, 5]
        expected_notes = ["A", "C", "E"]
        calculated_notes = get_notes_from_intervals("A", intervals)
&gt;       assert calculated_notes == expected_notes
E       AssertionError: assert ['A', 'B', 'C#'] == ['A', 'C', 'E']
E         
E         At index 1 diff: 'B' != 'C'
E         Use -v to get more diff

tests\test_main.py:210: AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_get_notes_from_intervals_scale" file="tests\test_main.py" line="197" time="0.134"><failure message="AssertionError: assert ['C', 'C#', '...'E', 'F', ...] == ['C', 'D', 'E...'G', 'A', ...]&#10;  &#10;  At index 1 diff: 'C#' != 'D'&#10;  Use -v to get more diff">def test_get_notes_from_intervals_scale():
        """Unit test for get_notes_from_intervals with a C Major scale."""
        intervals = [1, 2, 3, 4, 5, 6, 7]
        expected_notes = ["C", "D", "E", "F", "G", "A", "B"]
        calculated_notes = get_notes_from_intervals("C", intervals)
&gt;       assert calculated_notes == expected_notes
E       AssertionError: assert ['C', 'C#', '...'E', 'F', ...] == ['C', 'D', 'E...'G', 'A', ...]
E         
E         At index 1 diff: 'C#' != 'D'
E         Use -v to get more diff

tests\test_main.py:203: AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_get_scale_with_invalid_name" file="tests\test_main.py" line="108" time="0.163"><failure message="assert 200 == 404&#10; +  where 200 = &lt;Response [200 OK]&gt;.status_code">def test_get_scale_with_invalid_name():
        """Tests that requesting a non-existent scale returns a 404 error."""
        response = client.get("/scales/C/SuperLydian/chords")
&gt;       assert response.status_code == 404
E       assert 200 == 404
E        +  where 200 = &lt;Response [200 OK]&gt;.status_code

tests\test_main.py:112: AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_get_visualized_fretboard_for_scale" file="tests\test_main.py" line="137" time="0.149"><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.test_main" name="test_voicing_crud_and_reorder" file="tests\test_main.py" line="167" time="0.180"><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase></testsuite></testsuites>